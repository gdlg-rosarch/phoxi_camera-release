#!/usr/bin/env python
PACKAGE = "phoxi_camera"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# gen.add("size_width", int_t, 1 << 1, "An Integer parameter", 1920, 0)
# gen.add("size_height", int_t, 1 << 2, "An Integer parameter", 1080, 0)
gen.add("vertical_resolution", int_t, 1 << 3, "An Integer parameter", 1, 1, 2)
gen.add("horizontal_resolution", int_t, 1 << 4, "An Integer parameter", 1, 1, 2)
gen.add("scan_multiplier", int_t, 1 << 5, "An Integer parameter", 1)
gen.add("shutter_multiplier", int_t, 1 << 6, "An Integer parameter", 1, 20)
# gen.add("acquisition_time", double_t, 1 << 6, "A double parameter", 1.0, 0.0)

trigger_enum = gen.enum([gen.const("Freerun", int_t, 0, "A small constant"),
                         gen.const("Software", int_t, 1, "A medium constant"),
                         gen.const("Hardware", int_t, 2, "A large constant"),
                         gen.const("NoValue", int_t, 3, "An extra large constant")],
                        "An enum to set size")

gen.add("trigger_mode", int_t, 1 << 7, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=trigger_enum)

timeout_enum = gen.enum([gen.const("ZeroTimeout", int_t, 0, "A small constant"),
                         gen.const("Infinity", int_t, -1, "A medium constant"),
                         gen.const("LastStored", int_t, -2, "A large constant"),
                         gen.const("Default", int_t, -3, "An extra large constant")],
                        "An enum to set size")

gen.add("timeout", int_t, 1 << 8, "A size parameter which is edited via an enum", -1, -3, 0, edit_method=timeout_enum)

gen.add("confidence", double_t, 1 << 9, "A double parameter", 1.0, 0.0)

gen.add("send_point_cloud", bool_t, 1 << 10, "A Boolean parameter", True)
gen.add("send_normal_map", bool_t, 1 << 11, "A Boolean parameter", True)
gen.add("send_confidence_map", bool_t, 1 << 12, "A Boolean parameter", True)
gen.add("send_texture", bool_t, 1 << 13, "A Boolean parameter", True)

exit(gen.generate(PACKAGE, "phoxi_camera_node", "phoxi_camera"))
